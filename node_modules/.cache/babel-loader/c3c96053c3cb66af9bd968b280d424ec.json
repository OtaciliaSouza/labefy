{"ast":null,"code":"var _jsxFileName = \"/home/otacilia/\\xC1rea de Trabalho/projeto-labefy (c\\xF3pia)/labefy/src/components/Home.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport HomePlaylists from \"./HomePlaylists\";\nimport UserPlaylists from \"./UserPlaylists\";\nimport PlaylistsDetails from \"./PlaylistsDetails\";\nimport CreatePlaylists from \"./CreatePlaylists\";\nimport Sidebar from \"./Sidebar\";\nimport { HomePage, MainContainer } from \"./styles/StyledHome\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst urlApi = \"https://us-central1-labenu-apis.cloudfunctions.net/labefy/playlists\";\nconst headers = {\n  headers: {\n    Authorization: \"Otacilia-souza-gebru\"\n  }\n};\nexport default class Home extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      playlists: [],\n      playlistName: \"\",\n      playlistId: \"\",\n      tracks: [],\n      page: \"home\"\n    };\n\n    this.getAllPlaylists = async () => {\n      try {\n        const res = await axios.get(urlApi, headers);\n        this.setState({\n          playlists: res.data.result.list\n        });\n      } catch (err) {\n        console.log(err.message);\n      }\n    };\n\n    this.deletePlaylist = async id => {\n      const question = window.confirm(\"Tem certeza que deseja deletar esta playlist?\");\n\n      if (question) {\n        try {\n          const res = await axios.delete(`${urlApi}/${id}`, headers);\n          alert(\"Playlist deletada\");\n          this.getAllPlaylists();\n          this.pagePlaylists();\n        } catch (err) {\n          console.log(err.message);\n        }\n      }\n    };\n\n    this.getPlaylistTracks = async (id, name) => {\n      try {\n        const res = await axios.get(`${urlApi}/${id}/tracks`, headers);\n        this.setState({\n          tracks: res.data.result.tracks,\n          playlistName: name,\n          playlistId: id,\n          page: this.state.page\n        });\n        console.log(this.state.tracks);\n      } catch (err) {\n        console.log(err.response.data.message);\n      }\n    };\n\n    this.renderPages = () => {\n      switch (this.state.page) {\n        case \"home\":\n          return /*#__PURE__*/_jsxDEV(HomePlaylists, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 16\n          }, this);\n\n        case \"playlists\":\n          return /*#__PURE__*/_jsxDEV(UserPlaylists, {\n            pagePlaylists: this.pagePlaylists,\n            pageDetails: this.pagePlaylistsDetails,\n            pageAdd: this.pageAddTracks,\n            playlistName: this.state.playlistName,\n            playlistId: this.state.playlistId,\n            tracks: this.state.tracks,\n            getPlaylistTracks: this.getPlaylistTracks,\n            getAllPlaylists: this.getAllPlaylists,\n            playlists: this.state.playlists,\n            deletePlaylist: this.deletePlaylist\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 11\n          }, this);\n\n        case \"details\":\n          return /*#__PURE__*/_jsxDEV(PlaylistsDetails, {\n            pagePlaylists: this.pagePlaylists,\n            pageDetails: this.pagePlaylistsDetails,\n            pageAdd: this.pageAddTracks,\n            playlistName: this.state.playlistName,\n            playlistId: this.state.playlistId,\n            tracks: this.state.tracks,\n            getPlaylistTracks: this.getPlaylistTracks,\n            getAllPlaylists: this.getAllPlaylists,\n            deletePlaylist: this.deletePlaylist\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 11\n          }, this);\n\n        case \"create\":\n          return /*#__PURE__*/_jsxDEV(CreatePlaylists, {\n            pagePlaylists: this.pagePlaylists,\n            pageDetails: this.pagePlaylistsDetails,\n            getAllPlaylists: this.getAllPlaylists\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 11\n          }, this);\n\n        default:\n          return;\n      }\n    };\n\n    this.pageHome = () => {\n      this.setState({\n        page: \"home\"\n      });\n    };\n\n    this.pagePlaylists = () => {\n      this.setState({\n        page: \"playlists\"\n      });\n    };\n\n    this.pagePlaylistsDetails = () => {\n      this.setState({\n        page: \"details\"\n      });\n    };\n\n    this.pageCreatePlaylists = () => {\n      this.setState({\n        page: \"create\"\n      });\n    };\n\n    this.pageAddTracks = () => {\n      this.setState({\n        page: \"add\"\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getAllPlaylists();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(HomePage, {\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        pagePlaylists: this.pagePlaylists,\n        pageDetails: this.pagePlaylistsDetails,\n        pageCreate: this.pageCreatePlaylists,\n        getPlaylistTracks: this.getPlaylistTracks,\n        getAllPlaylists: this.getAllPlaylists,\n        playlists: this.state.playlists,\n        pageHome: this.pageHome\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MainContainer, {\n        children: this.renderPages()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/otacilia/Área de Trabalho/projeto-labefy (cópia)/labefy/src/components/Home.js"],"names":["React","axios","HomePlaylists","UserPlaylists","PlaylistsDetails","CreatePlaylists","Sidebar","HomePage","MainContainer","urlApi","headers","Authorization","Home","Component","state","playlists","playlistName","playlistId","tracks","page","getAllPlaylists","res","get","setState","data","result","list","err","console","log","message","deletePlaylist","id","question","window","confirm","delete","alert","pagePlaylists","getPlaylistTracks","name","response","renderPages","pagePlaylistsDetails","pageAddTracks","pageHome","pageCreatePlaylists","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport HomePlaylists from \"./HomePlaylists\";\nimport UserPlaylists from \"./UserPlaylists\";\nimport PlaylistsDetails from \"./PlaylistsDetails\";\nimport CreatePlaylists from \"./CreatePlaylists\";\nimport Sidebar from \"./Sidebar\";\nimport { HomePage, MainContainer } from \"./styles/StyledHome\";\n\nconst urlApi =\n  \"https://us-central1-labenu-apis.cloudfunctions.net/labefy/playlists\";\n\nconst headers = {\n  headers: {\n    Authorization: \"Otacilia-souza-gebru\",\n  },\n};\n\nexport default class Home extends React.Component {\n  state = {\n    playlists: [],\n    playlistName: \"\",\n    playlistId: \"\",\n    tracks: [],\n    page: \"home\",\n  };\n\n  componentDidMount() {\n    this.getAllPlaylists();\n  }\n\n  getAllPlaylists = async () => {\n    try {\n      const res = await axios.get(urlApi, headers);\n      this.setState({ playlists: res.data.result.list });\n    } catch (err) {\n      console.log(err.message);\n    }\n  };\n\n  deletePlaylist = async (id) => {\n    const question = window.confirm(\n      \"Tem certeza que deseja deletar esta playlist?\"\n    );\n    if (question) {\n      try {\n        const res = await axios.delete(`${urlApi}/${id}`, headers);\n        alert(\"Playlist deletada\");\n        this.getAllPlaylists();\n        this.pagePlaylists();\n      } catch (err) {\n        console.log(err.message);\n      }\n    }\n  };\n\n  getPlaylistTracks = async (id, name) => {\n    try {\n      const res = await axios.get(`${urlApi}/${id}/tracks`, headers);\n      this.setState({\n        tracks: res.data.result.tracks,\n        playlistName: name,\n        playlistId: id,\n        page: this.state.page,\n      });\n      console.log(this.state.tracks);\n    } catch (err) {\n      console.log(err.response.data.message);\n    }\n  };\n\n  renderPages = () => {\n    switch (this.state.page) {\n      case \"home\":\n        return <HomePlaylists />;\n      case \"playlists\":\n        return (\n          <UserPlaylists\n            pagePlaylists={this.pagePlaylists}\n            pageDetails={this.pagePlaylistsDetails}\n            pageAdd={this.pageAddTracks}\n            playlistName={this.state.playlistName}\n            playlistId={this.state.playlistId}\n            tracks={this.state.tracks}\n            getPlaylistTracks={this.getPlaylistTracks}\n            getAllPlaylists={this.getAllPlaylists}\n            playlists={this.state.playlists}\n            deletePlaylist={this.deletePlaylist}\n          />\n        );\n      case \"details\":\n        return (\n          <PlaylistsDetails\n            pagePlaylists={this.pagePlaylists}\n            pageDetails={this.pagePlaylistsDetails}\n            pageAdd={this.pageAddTracks}\n            playlistName={this.state.playlistName}\n            playlistId={this.state.playlistId}\n            tracks={this.state.tracks}\n            getPlaylistTracks={this.getPlaylistTracks}\n            getAllPlaylists={this.getAllPlaylists}\n            deletePlaylist={this.deletePlaylist}\n          />\n        );\n      case \"create\":\n        return (\n          <CreatePlaylists\n            pagePlaylists={this.pagePlaylists}\n            pageDetails={this.pagePlaylistsDetails}\n            getAllPlaylists={this.getAllPlaylists}\n          />\n        );\n      default:\n        return;\n    }\n  };\n\n  pageHome = () => {\n    this.setState({ page: \"home\" });\n  };\n\n  pagePlaylists = () => {\n    this.setState({ page: \"playlists\" });\n  };\n\n  pagePlaylistsDetails = () => {\n    this.setState({ page: \"details\" });\n  };\n\n  pageCreatePlaylists = () => {\n    this.setState({ page: \"create\" });\n  };\n\n  pageAddTracks = () => {\n    this.setState({ page: \"add\" });\n  };\n\n  render() {\n    return (\n      <HomePage>\n        <Sidebar\n          pagePlaylists={this.pagePlaylists}\n          pageDetails={this.pagePlaylistsDetails}\n          pageCreate={this.pageCreatePlaylists}\n          getPlaylistTracks={this.getPlaylistTracks}\n          getAllPlaylists={this.getAllPlaylists}\n          playlists={this.state.playlists}\n          pageHome={this.pageHome}\n        />\n        <MainContainer>{this.renderPages()}</MainContainer>\n      </HomePage>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}